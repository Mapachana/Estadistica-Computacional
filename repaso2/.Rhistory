}
paretodist <- function(x,a,b){
return((1-(b/x)^a)*(x >= b))
}
hist(x, freq=FALSE, ylim=c(0,0.8))
lines(density(x), col="blue")
curve(pareto(x,a,b), col="red", add=TRUE)
ks.test(x,paretodist(x,a,b))
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- b/( (1-u)^(1/a) )
pareto <- function(x,a,b){
return((a*b^a)/(x^(a+1)))
}
paretodist <- function(x,a,b){
return((1-(b/x)^a)*(x >= b))
}
hist(x, freq=FALSE, ylim=c(0,0.8))
lines(density(x), col="blue")
curve(pareto(x,a,b), col="red", add=TRUE)
ks.test(x,paretodist, a=a,b=b)
nsim <- 1000
f <- function(x){
res <- (1/(1+x^2)) *(x >= 0 & x <= 1)
return(res)
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
nsim <- 1000
f <- function(x){
res <- (1/(1+x^2)) *(x >= 0 & x <= 1)
return(res)
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
estim <- cumsum(fx)/1:nsim
estim.err <- sqrt(cumsum((fx-estim)^2))/1:nsim
plot(1:nsim,estim,type='l',ylab='Aproximación y límites de error',
xlab='Número de simulaciones')
z<-qnorm(0.025,lower.tail = FALSE)
lines(estim - z*estim.err,col='blue',lwd=2,lty=3)
lines(estim + z*estim.err,col='blue',lwd=2,lty=3)
abline(h=pi/4,col=2)
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- b/( (1-u)^(1/a) )
x
pareto <- function(x,a,b){
return((a*b^a)/(x^(a+1)))
}
paretodist <- function(x,a,b){
return((1-(b/x)^a)*(x >= b))
}
hist(x, freq=FALSE, ylim=c(0,0.8))
lines(density(x), col="blue")
curve(pareto(x,a,b), col="red", add=TRUE)
ks.test(x,paretodist, a=a,b=b)
x <- b/( (1-u)^(1/a) )
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- b/( (1-u)^(1/a) )
pareto <- function(x,a,b){
return((a*b^a)/(x^(a+1)))
}
paretodist <- function(x,a,b){
return((1-(b/x)^a)*(x >= b))
}
hist(x, freq=FALSE, ylim=c(0,0.8))
lines(density(x), col="blue")
curve(pareto(x,a,b), col="red", add=TRUE)
ks.test(x,paretodist, a=a,b=b)
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- b/( (1-u)^(1/a) )
pareto <- function(x,a,b){
return((a*b^a)/(x^(a+1)))
}
paretodist <- function(x,a,b){
return((1-(b/x)^a)*(x >= b))
}
hist(x, freq=FALSE, ylim=c(0,0.8))
lines(density(x), col="blue")
curve(pareto(x,a,b), col="red", add=TRUE)
ks.test(x,paretodist, a=a,b=b)
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE)
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD)
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD')
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD')
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD', ylim=c(0, 0.1))
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD', ylim=c(0, 0.1))
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
qqnorm(y)
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD', ylim=c(0, 0.1))
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
qqnorm(y)
boxplot(y)
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD', ylim=c(0, 0.1))
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
qqnorm(y)
boxplot(y)
boxplot(x,y names=c("x", "y"))
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD', ylim=c(0, 0.1))
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
qqnorm(y)
boxplot(y)
boxplot(x,y, names=c("x", "y"))
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD', ylim=c(0, 0.1))
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
qqnorm(y)
boxplot(y)
boxplot(x,y, names=c("x", "y"))
plot(x,y)
set.seed(1)
n <- 50
y <- rchisq(n, 30)
x <- rnorm(n, 30, 5)
mean(y)
sd(y)
quantile(y, c(0.25, 0.5, 0.75))
hist(y, freq=FALSE, breaks='FD', ylim=c(0, 0.1))
curve(dnorm(x, mean(y), sd(y)), add=TRUE, col="red")
qqnorm(y)
boxplot(y)
boxplot(x,y, names=c("x", "y"))
plot(x,y)
fit <- lm(y~x)
abline(fit)
ndados <- function(n=4){
dados <- sample(1:6, n, replace=TRUE)
print(dados)
return(6 %in% dados)
}
ndados(2)
ndados <- function(n=4){
dados <- sample(1:6, n, replace=TRUE)
print(dados)
return(6 %in% dados)
}
ndados(5)
ndados <- function(n=4){
dados <- sample(1:6, n, replace=TRUE)
print(dados)
return(6 %in% dados)
}
ndados(5)
print(lanzamiento[1:10])
ndados <- function(n=4){
dados <- sample(1:6, n, replace=TRUE)
print(dados)
return(6 %in% dados)
}
nsim <- 10000
lanzamientos <- numeric(nsim)
for (i in 1:nsim){
lanzamientos[i] <- ndados()
}
print(lanzamientos[1:10])
ndados <- function(n=4){
dados <- sample(1:6, n, replace=TRUE)
return(6 %in% dados)
}
nsim <- 10000
lanzamientos <- numeric(nsim)
for (i in 1:nsim){
lanzamientos[i] <- ndados()
}
print(lanzamientos[1:10])
ndados <- function(n=4){
dados <- sample(1:6, n, replace=TRUE)
return(6 %in% dados)
}
nsim <- 10000
lanzamientos <- numeric(nsim)
for (i in 1:nsim){
lanzamientos[i] <- ndados()
}
mean(lanzamientos)
1-(5/6)^4
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
x
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
curve(rpareto(u,a,b), add=TRUE, col="red")
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
curve(rpareto(x,a,b), add=TRUE, col="red")
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
curve(rpareto(u,a,b), add=TRUE, col="red")
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
curve(rpareto(x,a,b), add=TRUE, col="red")
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
curve(density(x), add=TRUE, col="blue")
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
lines(density(x), add=TRUE, col="blue")
curve(rpareto(x,a,b), add=TRUE, col="red")
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
lines(density(x), col="blue")
curve(rpareto(x,a,b), add=TRUE, col="red")
rpareto <- function(x,a,b){
return ( (a*b^a)/(x^(a+1)) *(x>=b) )
}
ppareto <- function(x,a,b){
return ( 1-(b/x)^a *(x>=b) )
}
ipareto <- function(u,a,b){
return( b/((1-u)^(1/a)) )
}
nsim <- 1000
a <- 5
b <- 4
u <- runif(nsim)
x <- sapply(u, ipareto, a=a, b=b)
hist(x, freq=FALSE)
lines(density(x), col="blue")
curve(rpareto(x,a,b), add=TRUE, col="red")
ks.test(x, ppareto, a=a, b=b)
nsim <- 1000
f <- function(x){
return( 1/(1+x^2) *(x>0 & x < 1) )
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
sd(x)/sqrt(nsim)
estim <- cumsum(x)/(1:nsim)
estim.err <- sqrt(cumsum((x-estim)^2))/(1:nsim)
z <- qnorm(0.025, lower.tail=FALSE)
plot(1:nsim, estim, type="l", ylab="Aproximación y límites de error", xlab="Número de simulaciones")
lines(estim-z*estim.err, col="blue", lty=3, lwd=2)
lines(estim+z*estim.err, col="blue", lty=3, lwd=2)
abline(h=pi/4, col="red")
nsim <- 1000
f <- function(x){
return( 1/(1+x^2) *(x>0 & x < 1) )
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
sd(x)/sqrt(nsim)
estim <- cumsum(x)/(1:nsim)
estim.err <- sqrt(cumsum((x-estim)^2))/(1:nsim)
z <- qnorm(0.025, lower.tail=FALSE)
plot(1:nsim, estim, type="l", ylab="Aproximación y límites de error", xlab="Número de simulaciones")
lines(estim-z*estim.err, col="blue", lty=3, lwd=2)
lines(estim+z*estim.err, col="blue", lty=3, lwd=2)
abline(h=pi/4, col="red")
nsim <- 1000
f <- function(x){
return( 1/(1+x^2) *(x>0 & x < 1) )
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
sd(x)/sqrt(nsim)
estim <- cumsum(x)/(1:nsim)
estim.err <- sqrt(cumsum((x-estim)^2))/(1:nsim)
z <- qnorm(0.025, lower.tail=FALSE)
plot(1:nsim, estim, type="l", ylab="Aproximación y límites de error", xlab="Número de simulaciones")
lines(estim-z*estim.err, col="blue", lty=3, lwd=2)
lines(estim+z*estim.err, col="blue", lty=3, lwd=2)
abline(h= (pi/4), col="red")
nsim <- 1000
f <- function(x){
return( 1/(1+x^2) *(x>0 & x < 1) )
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
sd(x)/sqrt(nsim)
estim <- cumsum(x)/(1:nsim)
estim.err <- sqrt(cumsum((x-estim)^2))/(1:nsim)
z <- qnorm(0.025, lower.tail=FALSE)
plot(1:nsim, estim, type="l", ylab="Aproximación y límites de error", xlab="Número de simulaciones")
lines(estim-z*estim.err, col="blue", lty=3, lwd=2)
lines(estim+z*estim.err, col="blue", lty=3, lwd=2)
abline(h= (pi/4), col="red")
nsim <- 1000
f <- function(x){
return( 1/(1+x^2) *(x>0 & x < 1) )
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
sd(x)/sqrt(nsim)
estim <- cumsum(x)/(1:nsim)
estim.err <- sqrt(cumsum((x-estim)^2))/(1:nsim)
z <- qnorm(0.025, lower.tail=FALSE)
plot(1:nsim, estim, type="l", ylab="Aproximación y límites de error", xlab="Número de simulaciones")
lines(estim-z*estim.err, col="blue", lty=3, lwd=2)
lines(estim+z*estim.err, col="blue", lty=3, lwd=2)
abline(h= (pi/4), col="red")
nsim <- 1000
f <- function(x){
return( 1/(1+x^2) *(x>0 & x < 1) )
}
x <- runif(nsim)
fx <- sapply(x, f)
mean(fx)
pi/4
sd(x)/sqrt(nsim)
estim <- cumsum(fx)/(1:nsim)
estim.err <- sqrt(cumsum((fx-estim)^2))/(1:nsim)
z <- qnorm(0.025, lower.tail=FALSE)
plot(1:nsim, estim, type="l", ylab="Aproximación y límites de error", xlab="Número de simulaciones")
lines(estim-z*estim.err, col="blue", lty=3, lwd=2)
lines(estim+z*estim.err, col="blue", lty=3, lwd=2)
abline(h= (pi/4), col="red")
